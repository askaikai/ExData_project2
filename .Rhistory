colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
View(GDP)
GDP$USdollars=numeric(GDP$USdollars)
dIn = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,skip=5)
View(dIn)
dIn = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,
skip=5,nrows=10)
View(dIn)
class(dIn$V1)
dIn = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,
skip=5,nrows=10,blank.lines.skip=TRUE)
View(dIn)
View(dIn)
class(dIn$V2)
class(dIn$V3)
class(dIn$V4)
class(dIn$V5)
class(dIn)
colC = c("character","integer","logical","character","numeric","logical","logical","logical","logical","logical")
dIn2 = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,
colClasses=colC)
colCC
colC
colC = c("character","integer","logical","character","numeric",rep("logical",5))
colC
dIn2 = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,
colClasses=colC)
dIn2 = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,
skip=5, colClasses=colC)
dIn = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE, skip=5)
View(dIn)
keepCol = c(1,2,4,5)
GDP=dIn[,keepCol]
View(GDP)
colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
View(GDP)
GDP$USdollars=as.integer(GDP$USdollars)
class(GDP$USdollars)
class(GDP$GDPranking)
GDP$GDPranking=as.integer(GDP$GDPranking)
GDP=dIn[,keepCol]
View(GDP)
colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
GDP$GDPranking=as.integer(GDP$GDPranking)
View(GDP)
class(GDP$USdollars)
class(GDP$GDPranking)
a=gsub("\xca", "", GDP$USdollars)
a
head(GDP$USdollars)
head(a)
a <- gsub(", a \\(\\)", "", GDP$USdollars)
head(a)
a=gsub("\xca", "", GDP$USdollars)
a <- gsub(", tonnes \\(\\)", "", a)
head(a)
a=as.numeric(a)
head(a)
test=GDP
View(test)
test$USdollars = gsub("\xca", "", test$USdollars)
test$USdollars <- gsub(", USdollars \\(\\)", "", test$USdollars)
test$USdollars <- as.numeric(test$USdollars)
head(test$USdollars)
dIn = read.csv('GDP.csv',header=FALSE, skip=5)
View(dIn)
keepCol = c(1,2,4,5)
GDP=dIn[,keepCol]
View(GDP)
colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
GDP$GDPranking=as.integer(GDP$GDPranking)
View(GDP)
GDP=dIn[,keepCol]
View(GDP)
class(GDP$V2)
colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
GDP$GDPranking=as.numeric(levels(GDP$GDPranking))[as.integer(GDP$GDPranking)]
View(GDP)
class(GDP$GDPranking)
GDP$USdollars=as.numeric(levels(GDP$USdollars))[as.integer(GDP$USdollars)]
View(GDP)
GDP=dIn[,keepCol]
View(GDP)
colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
GDP$GDPranking=as.numeric(levels(GDP$GDPranking))[as.integer(GDP$GDPranking)]
View(GDP)
GDP$USdollars[1:3]
class(GDP$USdollars)
a=as.character(GDP$USdollars)
head(a)
?grepl
gsub("([ab])", "\\1_\\1_", "abc and ABC")
txt <- "a test of capitalizing"
gsub("(\\w)(\\w*)", "\\U\\1\\L\\2", txt, perl=TRUE)
gsub("(\\w)(\\w)", "\\U\\1\\L\\2", txt, perl=TRUE)
class(GDP$USdollars)
a=as.character(GDP$USdollars)
head(a)
gsub("\"","",a)
gsub("" ","",a)
gsub("\" ","",a)
clear all
rm(list=ls())
ls()
ao <- read.csv("~/Downloads/appleorange.csv")
ao <- read.csv("~/Downloads/appleorange.csv")
View(ao)
aoraw <- read.csv("appleorange.csv", stringsAsFactors=FALSE, header=FALSE)
aoraw <- read.csv("~/Downloads/appleorange.csv", stringsAsFactors=FALSE, header=FALSE)
View(ao)
aodata <- aoraw[3:700,]
View(ao)
names(aodata) <- c("country", "countrynumber", "products", "productnumber", "tonnes", "year")
View(ao)
View(aodata)
aodata$countrynumber <- as.integer(aodata$countrynumber)
View(aodata)
fslines <- which(aodata$country == "Food supply quantity (tonnes) (tonnes)")
fslines
aodata <- aodata[(-1 * fslines),]
View(aodata)
aodata$tonnes <- gsub("\xca", "", aodata$tonnes)
View(aodata)
aodata$tonnes <- gsub(", tonnes \\(\\)", "", aodata$tonnes)
View(aodata)
class(aodata$tonnes)
aodata$tonnes <- as.numeric(aodata$tonnes)
View(aodata)
class(aodata$tonnes)
fileUrl='https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
download.file(fileUrl, destfile='GDP.csv',method='curl')
dIn = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,skip=5)
View(dIn)
keepCol = c(1,2,4,5)
GDP=dIn[,keepCol]
View(GDP)
colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
View(GDP)
class(GDP$GDPranking)
GDP$GDPranking <- as.integer(GDP$GDPranking)
View(GDP)
class(GDP$GDPranking)
GDP$USdollars[1:3]
class(GDP$USdollars)
line <- "ab\\\'cd"
line
gsub("\\\\'", "\\\\\"", line)
gsub("""", "", a)
gsub(""\\s"", "", a)
str <- "Now is the time      "
str
sub(" +$", "", str)
sub("[[:space:]]+$", "", str)
sub("\\s+$", "", str, perl = TRUE)
a <- as.numeric(GDP$USdollars)
a[1:3]
a <- gsub("\xca", "", GDP$USdollars)
a
a <- as.numeric(a)
a
a <- gsub(" \xca ", "", GDP$USdollars)
a
a
class(a)
a=factor(a)
class(a)
a=as.numeric(levels(a))[a]
a
a=GDP$USdollars
a[1:4]
b <- gsub("\" ", "", a)
b[1:4]
a[1][1]
a[1][[1]
]
dim(a[1])
length(a[1])
str <- "Now is the time      "
sub("[[:space:]]+$", "", str)
sub("[[:space:]]+$", "", a)
sub("[[:space:]]", "", a)
b=sub("[[:space:]]", "", a)
class(b)
as.numeric(b)
gsub("\xca", "", b)
c=gsub("\xca", "", b)
as.numeric(c)
a=GDP$USdollars
b=sub("[[:space:]]", "", a)
b
sub(",", "", a)
sub(",+", "", a)
a[1:4]
sub(",*", "", a)
sub("\,", "", a)
sub("[,]", "", a)
sub("^[,]$", "", a)
sub(",", "", a)
gsub(",", "", a)
gsub("[:space:]", "", a)
gsub("([:space:])(,)", "", a)
gsub("([:space:]),", "", a)
a=GDP$USdollars
a=sub("[[:space:]]", "", a)
a
a=gsub(",", "", a)
a
as.numeric(a)
a=GDP$USdollars
a=sub("[[:space:]]", "", a)
a=gsub(",", "", a)
GDP$USdollars=as.numeric(a)
View(GDP)
fileUrl='https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
download.file(fileUrl, destfile='ED.csv',method='curl')
fileUrl='https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
download.file(fileUrl, destfile='ED.csv',method='curl')
dIn = read.csv('ED.csv')
View(dIn)
fileUrl='https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
download.file(fileUrl, destfile='ED.csv',method='curl')
dIn = read.csv('ED.csv')
View(dIn)
class(dIn$CountryCode)
class(GDP$CountryCode)
dIn = read.csv('ED.csv',stringsAsFactors=FALSE, header=FALSE)
View(dIn)
dIn = read.csv('ED.csv',stringsAsFactors=FALSE)
View(dIn)
class(dIn$CountryCode)
grepl("ABW", GDP$CountryCode)
sum(grepl("ABW", GDP$CountryCode))
sum(grepl("XXX", GDP$CountryCode))
sum(grepl(dIn$CountryCode, GDP$CountryCode))
sum(grepl(dIn$CountryCode[1], GDP$CountryCode))
dim(dIn)
ED = read.csv('ED.csv',stringsAsFactors=FALSE)
dim(ED)[1]
a=NULL
a[1]=sum(grepl(dIn$CountryCode[1], GDP$CountryCode))
a
sum(a)
a=NULL
for(i in 1:dim(ED)[1]){
a[i]=sum(grepl(ED$CountryCode[i], GDP$CountryCode))
}
sum(a)
grep("ab","abc")
grepl("ab","abc")
a=NULL
for(i in 1:dim(ED)[1]){
a[i]=(ED$CountryCode[i]==GDP$CountryCode)
}
sum(a)
i
i=1
ED$CountryCode[i]
ED$CountryCode[i]==GDP$CountryCode
sum(ED$CountryCode[i]==GDP$CountryCode)
a=NULL
for(i in 1:dim(ED)[1]){
a[i]=sum(ED$CountryCode[i]==GDP$CountryCode)
}
sum(a)
uniqueName.GDP = unique(GDP$CountryCode)
length(uniqueName.GDP)
uniqueName.ED = unique(ED$CountryCode)
length(uniqueName.ED)
a=NULL
for(i in 1:length(uniqueName.GDP)){
a[i]=sum(uniqueName.GDP[i]==uniqueName.ED)
}
sum(a)
GDP=GDP[1:190,]
View(GDP)
uniqueName.GDP = unique(GDP$CountryCode)
for(i in 1:length(uniqueName.GDP)){
a[i]=sum(uniqueName.GDP[i]==uniqueName.ED)
}
sum(a)
uniqueName.GDP
length(uniqueName.GDP)
1:length(uniqueName.GDP)
a=NULL
uniqueName.GDP = unique(GDP$CountryCode)
uniqueName.ED = unique(ED$CountryCode)
for(i in 1:length(uniqueName.GDP)){
a[i]=sum(uniqueName.GDP[i]==uniqueName.ED)
}
sum(a)
?order
?sort
a=NULL
a[1:3,1]=c(10,4,40)
a=matrix(0,3,2)
a
a[1:3,1]=c(10,4,40)
a[1:3,2]=c(1,50,20)
a
a[order(a[,1])]
a[order(a[,1]),]
GDPsorted = GDP[order(GDP$GDPranking),]
View(GDPsorted)
join <- merge(GDPsorted, ED, by = 'CountryCode', all = T)
View(join)
GDP=dIn[,keepCol]
colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
GDP$GDPranking <- as.integer(GDP$GDPranking)
a=GDP$USdollars
a=sub("[[:space:]]", "", a) # http://www.endmemo.com/program/R/gsub.php
a=gsub(",", "", a) # gsub is on all occurance
GDP$USdollars=as.numeric(a)
GDP=GDP[1:190,]
join <- merge(GDP, ED, by = 'CountryCode', all = T)
View(join)
View(GDP)
rm(list=ls())
dIn = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,skip=5)
keepCol = c(1,2,4,5)
GDP=dIn[,keepCol]
colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
GDP$GDPranking <- as.integer(GDP$GDPranking)
a=GDP$USdollars
a=sub("[[:space:]]", "", a) # http://www.endmemo.com/program/R/gsub.php
a=gsub(",", "", a) # gsub is on all occurance
GDP$USdollars=as.numeric(a)
GDP=GDP[1:190,]
View(GDP)
class(GDP$GDPranking)
class(GDP$USdollars)
ED = read.csv('ED.csv',stringsAsFactors=FALSE)
join <- merge(GDP, ED, by = 'CountryCode', all = T)
View(join)
join = join[order(join$GDPranking),]
View(join)
sum(join$GDPranking[1:3])
summary(join)
class(join$Income.Group)
mean(join$GDPranking[(join$Income.Group=="High income: OECD"),]
)
mean(join$GDPranking[(join$Income.Group=="High income: OECD")],)
?mean
mean(join$GDPranking[(join$Income.Group=="High income: OECD")],na.rm=TRUE)
mean(join$GDPranking[(join$Income.Group=="High income: nonOECD")],na.rm=TRUE)
190/5
table(join$GDPranking,join$Income.Group)
?quantile
190*.2
library(Himsc)
install.packages(Hmisc)
install.packages('Hmisc')
library(Himsc)
library(Hmisc)
join$GDPrankingQuant=cut2(join$GDPranking,g=5)
table(join$GDPrankingQuant)
table(join$GDPrankingQuant,join$Income.Group)
View(join)
?order
GDPsorted = GDP[order(GDP$GDPranking,decreasing=TRUE),]
join = join[order(join$GDPranking,decreasing=TRUE),]
View(join)
rm(list=ls())
fileUrl='https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
download.file(fileUrl, destfile='GDP.csv',method='curl')
dIn = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,skip=5)
keepCol = c(1,2,4,5)
GDP=dIn[,keepCol]
colnames(GDP)=c("CountryCode","GDPranking","LongName","USdollars")
dIn = read.csv('GDP.csv',stringsAsFactors=FALSE, header=FALSE,skip=5)
keepCol = c(1:5)
GDP=dIn[,keepCol]
colnames(GDP)=c("CountryCode","GDPranking","v3","LongName","USdollars")
GDP$GDPranking <- as.integer(GDP$GDPranking)
a=GDP$USdollars
a=sub("[[:space:]]", "", a) # http://www.endmemo.com/program/R/gsub.php
a=gsub(",", "", a) # gsub is on all occurance
GDP$USdollars=as.numeric(a)
GDP=GDP[1:190,]
View(GDP)
fileUrl='https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
download.file(fileUrl, destfile='ED.csv',method='curl')
ED = read.csv('ED.csv',stringsAsFactors=FALSE)
join <- merge(GDP, ED, by = 'CountryCode', all = T)
View(join)
join = join[order(join$GDPranking,decreasing=TRUE),]
View(join)
unique.GDP=unique(GDP$CountryCode)
unique.ED=unique(ED$CountryCode)
unique.ED
length(unique.GDP)
a=NULL
for(i in 1:length(unique.GDP)){
a[i]=sum(unique.GDP[i]==unique.ED)
}
sum(a)
rm(list=ls())
setwd('~/Documents/Coursera//ExploratoryDataAnalysis//ExData_project2')
getwd()
NEI <- readRDS("../data/summarySCC_PM25.rds")
View(NEI)
class(NEI)
class(NEI$fips)
class(NEI$SCC)
class(NEI$Pollutant)
class(NEI$Emissions)
class(NEI$type)
class(NEI$year)
SCC <- readRDS("../data/Source_Classification_Code.rds")
View(SCC)
table(NEI$fips)
table(NEI$Pollutant)
summary(NEI$Pollutant)
levels(NEI$Pollutant)
levels(as.factor(NEI$Pollutant))
totalpm25.1999 = sum(NEI$Emissions[NEI$year==1999])
totalpm25.1999
year=c(1999,2002,2005,2008)
?sapply
sumPM25 <- function(x) sum(NEI$Emissions[NEI$year==x])
sapply(year, sumPM25)
totalPM25 = sapply(year, sumPM25)
year=c(1999,2002,2005,2008)
sumPM25 <- function(x) sum(NEI$Emissions[NEI$year==x])
totalPM25 = sapply(year, sumPM25)
totalPM25
plot(totalPM25)
main='Total PM2.5 Emission in the United States from 1999 to 2008',
hist(d$Global_active_power, freq=TRUE, col='red',
main='Total PM2.5 Emission in the United States from 1999 to 2008',
xlab='Year', ylab='Total Emission (tons)')
plot(totalPM25,
main='Total PM2.5 Emission in the United States from 1999 to 2008',
xlab='Year', ylab='Total Emission (tons)')
axis(1, at=c(1:4),
labels=c("1999","2002","2005","2008"))
?plot
plot(totalPM25,ann=FALSE, xaxt="n")
title(main='Total PM2.5 Emission in the United States from 1999 to 2008',
xlab='Year', ylab='Total Emission (tons)')
axis(1, at=c(1:4),
labels=c("1999","2002","2005","2008"))
?line
?lines
plot(totalPM25,ann=FALSE, xaxt="n")
lines(totalPM25)
title(main='Total PM2.5 Emission in the United States from 1999 to 2008',
xlab='Year', ylab='Total Emission (tons)')
axis(1, at=c(1:4),
)
axis(1, at=c(1:4),
labels=c("1999","2002","2005","2008"))
plot(totalPM25,ann=FALSE, xaxt="n")
lines(totalPM25)
title(main='Total PM2.5 Emission in the United States from 1999 to 2008',
xlab='Year', ylab='Total Emission (tons)')
axis(1, at=c(1:4),
labels=c("1999","2002","2005","2008"))
dev.off()
png(file='plot1.png')
plot(totalPM25,ann=FALSE, xaxt="n")
lines(totalPM25)
title(main='Total PM2.5 Emission in the United States from 1999 to 2008',
xlab='Year', ylab='Total Emission (tons)')
axis(1, at=c(1:4),
labels=c("1999","2002","2005","2008"))
dev.off()
total
rm(totalpm25.1999)
totalPM25
plot(totalPM25/(10^6),ann=FALSE, xaxt="n")
lines(totalPM25/(10^6))
title(main='Total PM2.5 Emission in the United States from 1999 to 2008',
xlab='Year', ylab='Total Emission (10^6 tons)')
axis(1, at=c(1:4),
labels=c("1999","2002","2005","2008"))
dev.off()
ls()
rm(list=ls())
source("plot1.R)"
source("plot1.R")
plot1()
ls()
rm(list=ls())
setwd('~/Documents/Coursera//ExploratoryDataAnalysis//ExData_project2')
# read in data & code
NEI <- readRDS("../data/summarySCC_PM25.rds")
SCC <- readRDS("../data/Source_Classification_Code.rds")
View(NEI)
Bmore=NEI[NEI$fips == "24510",]
View(Bmore)
year=c(1999,2002,2005,2008)
sumPM25 <- function(x) sum(Bmore$Emissions[Bmore$year==x])
totalPM25 = sapply(year, sumPM25)
totalPM25
plot(totalPM25/(10^3),ann=FALSE, xaxt="n")
lines(totalPM25/(10^3))
title(main='Total PM2.5 Emission in Baltimore from 1999 to 2008',
xlab='Year', ylab='Total Emission (10^3 tons)')
axis(1, at=c(1:4),
labels=c("1999","2002","2005","2008"))
plot(totalPM25/(10^3),ann=FALSE, xaxt="n")
lines(totalPM25/(10^3))
title(main='Total PM2.5 Emission in Baltimore from 1999 to 2008',
xlab='Year', ylab='Total Emission (10^3 tons)')
axis(1, at=c(1:4),
labels=c("1999","2002","2005","2008"))
title(main='Total PM2.5 Emission in Baltimore City from 1999 to 2008',
xlab='Year', ylab='Total Emission (10^3 tons)')
View(SCC)
rm(list=ls())
source('plot2.R')
plot2()
